spring.application.name=vue-admin-boot

spring.main.banner-mode=OFF

#Springboot Datasource 配置属性 ：https://www.cnblogs.com/austinspark-jessylu/p/8065227.html
spring.datasource.sqlScriptEncoding=utf-8
#指定driver的类名，默认从jdbc url中自动探测
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#指定JDBC URL
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/sys_vue_auth?useUnicode=true&amp;characterEncoding=utf8mb4&autoReconnect=true&useSSL=false&mysqlEncoding=utf8mb4
#指定数据库名
spring.datasource.hikari.username=root
#指定数据库密码
spring.datasource.hikari.password=1234
#是否自动提交.
spring.datasource.hikari.auto-commit=true
#指定校验连接合法性执行的sql语句
spring.datasource.hikari.connection-test-query=SELECT 1
#指定连接的超时时间，毫秒单位.
spring.datasource.hikari.connection-timeout=30000
#指定连接被创建，再被添加到连接池之前执行的sql.
spring.datasource.hikari.connection-init-sql=set names utf8mb4;
#指定连接多久没被使用时，被设置为空闲，默认为10m
spring.datasource.hikari.idle-timeout=30000
#指定连接池中连接的最大生存时间，毫秒单位
spring.datasource.hikari.max-lifetime=1800000
#指定连接池最大的连接数，包括使用中的和空闲的连接.
spring.datasource.hikari.maximum-pool-size=15
#指定连接维护的最小空闲连接数，当使用HikariCP时指定
spring.datasource.hikari.minimum-idle=5
#指定连接池名字
spring.datasource.hikari.pool-name=DatebookHikariCP
#指定数据源的全限定名
#spring.datasource.hikari.data-source-class-name=com.zaxxer.hikari.HikariDataSource
#指定数据源
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。首先说明下proxy-target-class="true"和proxy-target-class="false"的区别，为true则是基于类的代理将起作用（需要cglib库），为false或者省略这个属性，则标准的JDK 基于接口的代理将起作用。
spring.aop.proxy-target-class=true

# driverClassName 和 data-source-class-name 不能同时使用

#指定mybaits映射文件（XML）目录
mybatis.mapper-locations=com/angzk/dao/mapper/xml/*Mapper.xml
#指定mybaite 数据库实体类目录 
#mybatis.type-aliases-package=com.angzk.dao.model
#由于Mapper文件 已经加上 @Mapper注解 所以此处省略
#@MapperScan("com.kuajx.dao.mapper") 也是同样用于扫描Mapper文件
#mybatis.type-handlers-package=com.angzk.dao.mapper


logging.config = classpath:log.xml
logging.level.com.angzk.dao = DEBUG